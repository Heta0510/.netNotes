Control Structure: Used to define the flow of program.
There are 2 types of control structure known as 
(i) Branching
   If...else : Used to execute statement based on condition.
   if(conditions){
      statement(s);
   }else{
      statement(s);
   }
example:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace PosNeg
{
    class Program
    {
        public void Check(int N)
        {
            if (N >= 0)
            {
                Console.WriteLine("Positive Number...");
            }
            else
            {
                Console.WriteLine("Negative Number...");
            }
        }
        static void Main(string[] args)
        {
            int N;
            Console.WriteLine("Enter negative value ");
            N = Convert.ToInt32(Console.ReadLine());
            Program obj = new Program();
            obj.Check(N);
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace EvenOdd
{
    class Program
    {
        public void Check(int num)
        {
            if (num % 2 == 0)
            {
                Console.WriteLine("Number is Even...");
            }
            else
            {
                Console.WriteLine("Number is Odd...");
            }
        }
        static void Main(string[] args)
        {
            int num;
            Console.WriteLine("Enter Number ");
            num = Convert.ToInt32(Console.ReadLine());
            Program obj = new Program();
            obj.Check(num);
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Max3
{
    class Program
    {
        public void Check(int a, int b, int c)
        {
            int m = a;
            if (m < b) {
                m = b;
            }
            if (m < c)
            {
                m = c;
            }
            Console.WriteLine("Maximum value is "+m);
        }
        static void Main(string[] args)
        {
            int a, b, c;
            Console.WriteLine("Enter 3 Numbers ");
            a = Convert.ToInt32(Console.ReadLine());
            b = Convert.ToInt32(Console.ReadLine());
            c = Convert.ToInt32(Console.ReadLine());
            Program obj = new Program();
            obj.Check(a, b, c);
        }
    }
}

(ii) Looping Control Structure:
   WhileLoop:This loop executes all the statement repeatedly until the condition remains true, if the condition remains false, then its come out of the loop.
   For every loop, there are 3 phases as:
    (i)Initialization: Initialization performed at the begining of the loop.
    (ii)Condition:Condition performed at the conditional part of the loop.
    (iii)Increment/Decrement:Increament or Decrement performed before closing the loop.
Syntx:
while(condition){
statements(s);
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Fact
{
    class Program
    {
        public void Calc(int n)
        {
            int f = 1;
            int i = 1;
            while (i <= n)
            {
                f = f * i;
                i++;
            }
            Console.WriteLine("Factorial Value is "+f);
        }
        static void Main(string[] args)
        {
            int n;
            Console.WriteLine("Enter N Value ");
            n = Convert.ToInt32(Console.ReadLine());
            Program obj = new Program();
            obj.Calc(n); 
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace EvenShow
{
    class Program
    {
        public void Show(int n)
        {
            int i = 0;
            while (i <= n)
            {
                i = i + 2;
                Console.WriteLine("Even "+i);
            }
        }
        static void Main(string[] args)
        {
            int n;
            Console.WriteLine("Enter N value ");
            n = Convert.ToInt32(Console.ReadLine());
            Program obj = new Program();
            obj.Show(n);
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace LoopDemo
{
    class Program
    {
        public void Show(int n)
        {
            int i = 0;
            while (i <= n)
            {
                Console.WriteLine("Welcome to Dotnet...");
                i++;
            }
        }
        static void Main(string[] args)
        {
            int n;
            Console.WriteLine("Enter n value ");
            n = Convert.ToInt32(Console.ReadLine());
            Program obj = new Program();
            obj.Show(n);
        }
    }
}


For Loop:This loop executes all the statements repeatedly until the condition remains true.If condition remains false then it comes out of the loop.
for(Initialize;condition;Increment/Decrement){
Statement(s);
}
Example:
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace Factors
{
    class Program
    {
        public void Factors(int n)
        {
            for (int i = 1; i < n; i++)
            {
                if (n % i == 0)
                {
                    Console.WriteLine("Factor "+i);
                }
            }
        }
        static void Main(string[] args)
        {
            int n;
            Console.WriteLine("Enter N Value ");
            n = Convert.ToInt32(Console.ReadLine());
            Program obj = new Program();
            obj.Factors(n);
        }
    }
}

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
namespace PrimeEx
{
    class Program
    {
        public void Check(int n)
        {
            bool flag = false;
            for (int i = 2; i < n; i++)
            {
                if (n%i == 0)
                {
                    flag = true;
                }
            }
            if (flag == true)
            {
                Console.WriteLine("Prime Number  ");
            }
            else {
                Console.WriteLine("Not Prime Number ");
            }
        }
        static void Main(string[] args)
        {
            int n = 6;
            Program obj = new Program();
            obj.Check(n);
        }
    }
}



